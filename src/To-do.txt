Requisitos de aprobaci칩n:

En primera medida, la web que entreguen deber치 contar con la funcionalidades pedidas en las entregas 1, 2 y 3 , estas eran:

游녤 Header con su navbar funcional en responsive con API Context.
游녤 Hero representativo de su p치gina.
游녤 Secci칩n de cards con productos destacados que lleve a la p치gina de productos de alguna manera (por ejemplo, un bot칩n).
游녤 Footer.
游녤 Una p치gina de "Sobre nosotros".
游녤 Una p치gina de "Productos" , con los productos renderizados din치micamente, l칩gica de filtros, agregado de productos al carrito, manejo de cantidades en carrito y la posibilidad de vaciar el carrito, borrar individualmente cada producto y realizar compra(Todas estas acciones deben tener un modal de confirmaci칩n).
游녤 Una secci칩n de contacto en la cual tienen que tener al menos un formulario de contacto con los campos "nombre", "apellido" , "email" y "asunto".
游녤 Todas las p치ginas vinculadas entre si mediante React Router.
游녤 Dise침o responsive de todas las p치ginas.

 Se debe deployar el proyecto en Vercel.


Finalmente, como desaf칤o final para el proyecto, deber치n:

游녤Utilizando Formik, deber치n realizar la validaci칩n del formulario de contacto. El mismo no debe enviar nada, pero si cumplir con la validaci칩n de manera correcta de cada uno de los campos y renderizar un mensaje de envio correcto en caso de que todos los campos pasen dicha validaci칩n.
游녤 Agregar la funcionalidad de persistencia de datos (productos del carrito) a nuestra app web.

En caso de que quieran agregar algo extra al proyecto y sientan ganas de afrontar un desaf칤o, les dejamos algunas tareas OPCIONALES que pueden agregar:
游녤 Migrar el context del men칰 a Redux Toolkit.
游녤 Agregar un sistema de login y registro.
游녤 Agregar una p치gina de checkout al realizar la compra.
游녤 Agregar una p치gina de producto para cada producto individual
游녤 Agregar envio de mail desde el formulario de contacto, usando API's como emailJS.
